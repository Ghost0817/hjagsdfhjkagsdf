{"ast":null,"code":"import { Injectable } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"./services/user.service\";\nexport class NoAuthGuard {\n  constructor(router, userService) {\n    this.router = router;\n    this.userService = userService;\n  }\n\n  canActivate(next, state) {\n    if (localStorage.getItem('accessToken')) {\n      // this.router.navigate(['/home']);\n      return false;\n    }\n\n    return true;\n  }\n\n}\n\nNoAuthGuard.ɵfac = function NoAuthGuard_Factory(t) {\n  return new (t || NoAuthGuard)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.UserService));\n};\n\nNoAuthGuard.ɵprov = i0.ɵɵdefineInjectable({\n  token: NoAuthGuard,\n  factory: NoAuthGuard.ɵfac\n});\n/*@__PURE__*/\n\n(function () {\n  i0.ɵsetClassMetadata(NoAuthGuard, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i1.Router\n    }, {\n      type: i2.UserService\n    }];\n  }, null);\n})();","map":{"version":3,"sources":["/Users/sainzaya/Desktop/type-writer/src/app/core/no-auth.guard.ts"],"names":[],"mappings":"AAAA,SAAS,UAAT,QAA2B,eAA3B;;;;AAOA,OAAM,MAAO,WAAP,CAAkB;AACtB,EAAA,WAAA,CACU,MADV,EAEU,WAFV,EAEkC;AADxB,SAAA,MAAA,GAAA,MAAA;AACA,SAAA,WAAA,GAAA,WAAA;AACN;;AAEJ,EAAA,WAAW,CAAC,IAAD,EAA+B,KAA/B,EAAyD;AAClE,QAAI,YAAY,CAAC,OAAb,CAAqB,aAArB,CAAJ,EAAyC;AACvC;AACA,aAAO,KAAP;AACD;;AAED,WAAO,IAAP;AACD;;AAbqB;;;mBAAX,W,EAAW,EAAA,CAAA,QAAA,CAAA,EAAA,CAAA,MAAA,C,EAAA,EAAA,CAAA,QAAA,CAAA,EAAA,CAAA,WAAA,C;AAAA,C;;;SAAX,W;AAAW,EAAA,OAAA,EAAX,WAAW,CAAA;;;;;uBAAX,W,EAAW,CAAA;UADvB;AACuB,GAAA,C","sourcesContent":["import { Injectable } from '@angular/core';\nimport { CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot, RouterModule } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { UserService } from './services/user.service';\nimport { take } from 'rxjs/operators';\n\n@Injectable()\nexport class NoAuthGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private userService: UserService\n  ) {}\n\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    if (localStorage.getItem('accessToken')) {\n      // this.router.navigate(['/home']);\n      return false;\n    }\n\n    return true;\n  }\n}"],"sourceRoot":""},"metadata":{},"sourceType":"module"}